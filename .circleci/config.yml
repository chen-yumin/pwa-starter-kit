version: 2.1
jobs:
  build:
    docker:
      - image: launcher.gcr.io/google/nodejs
    environment:
      - NODE_ENV: "build"
    steps:
      - checkout
      - run:
          name: "Install npm Dependencies"
          command: npm install
      - run:
          name: "Build"
          command: npm run build
      - save_cache:
          key: cache-build-{{ .Revision }}
          paths:
            - ./server/build
      - store_artifacts:
          path: ./server/build
          prefix: build
  test:
    docker:
      - image: circleci/node:latest-browsers
    environment:
      - NODE_ENV: "test"
      - DISPLAY: ":99.0"
    steps:
      - checkout
      - run:
          name: "Install npm Dependencies"
          command: npm install
      - run:
          name: "Download Selenium"
          command: curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar && mkdir test-reports
      - run:
          name: "Start Selenium"
          command: java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
          background: true
      - run:
          name: "Unit Test"
          command: npm run test:unit
      - run:
          name: "Integration Test"
          command: npm run test:integration
      - store_artifacts:
          path: test/integration/screenshots-current
          prefix: screenshots
      # - run:
      #     name: "Sauce Test"
      #     command: npm run test:sauce
  deploy:
    docker:
      - image: google/cloud-sdk:alpine
    steps:
      - checkout
      - restore_cache:
          key: cache-build-{{ .Revision }}
      - run:
          name: "Deploy to Google App Engine"
          command: |
            echo $GCLOUD_SERVICE_KEY > ./gcloud-service-key.json
            gcloud auth activate-service-account --key-file=./gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud auth list
            gcloud --quiet app deploy --no-promote --version $(echo ${CIRCLE_SHA1} | cut -c -7) server/app.yaml

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - test
      - deploy:
          requires:
            - build
            - test